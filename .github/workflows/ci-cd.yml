name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/my-app

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Run unit tests
        run: npm test -- --reporter mocha-junit-reporter

      - name: Build artifact
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-dist
          path: ./dist

  security_scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Dependency scan (npm audit)
        run: npm audit --json || true
      # Add Trivy/container scan if building images

  package_and_push:
    needs: [build, security_scan]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-dist

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:${{ github.sha }} .
      - name: Login to registry
        run: echo "${{ secrets.REGISTRY_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: docker push $IMAGE_NAME:${{ github.sha }}

  deploy_staging:
    needs: package_and_push
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Deploy to staging
        run: |
          # Example: kubectl set image deployment/myapp myapp=$IMAGE_NAME:${{ github.sha }}
          echo "deploy to staging (script/helm/terraform here)"

  smoke_test:
    needs: deploy_staging
    runs-on: ubuntu-latest
    steps:
      - name: Run smoke tests
        run: |
          # curl health endpoint and basic checks
          curl -f https://staging.example.com/health || exit 1

  deploy_prod:
    needs: [smoke_test]
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://example.com
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Manual approval placeholder
        uses: peter-evans/repository-dispatch@v2
        # Or use environment protection rules in GitHub for approvals
      - name: Deploy to production
        run: |
          echo "deploy to production (helm/terraform/ansible)"
